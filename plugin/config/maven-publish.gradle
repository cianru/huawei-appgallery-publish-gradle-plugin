/*
 * Copyright 2020 Aleksandr Mirko
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply from: "$projectDir/config/publish-methods.gradle"

private String getRepositoryUsername() {
    return hasProperty('SONATYPE_NEXUS_USERNAME')
            ? SONATYPE_NEXUS_USERNAME
            : System.env.SONATYPE_NEXUS_USERNAME
}

private String getRepositoryPassword() {
    return hasProperty('SONATYPE_NEXUS_PASSWORD')
            ? SONATYPE_NEXUS_PASSWORD
            : System.env.SONATYPE_NEXUS_PASSWORD
}

private String getRepositoryUrl() {
    return isReleaseBuild()
            ? "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            : "https://oss.sonatype.org/content/repositories/snapshots/"
}

def hasDeploymentTask(Project project) {
    def deploymentTasks = [
            "publishPlugins",
            "publish"
    ]
    deploymentTasks.any { project.gradle.taskGraph.hasTask(it) }
}

task sourceJar(type: Jar) {
    archiveClassifier.set("sources")
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: dokkaHtml) {
    archiveClassifier.set("javadoc")
    from dokkaHtml.outputDirectory
}

jar {
    manifest {
        attributes(
                "Implementation-Title": POM_ARTIFACT_ID,
                "Implementation-Version": getVersionName()
        )
    }
}

artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
}

publishing {
    publications {
        huawei(MavenPublication) {
            groupId = GROUP
            artifactId = POM_ARTIFACT_ID
            version = getVersionName()

            from components.java
            artifact sourceJar
            artifact javadocJar

            pom {
                name = POM_NAME
                packaging = POM_PACKAGING
                description = POM_DESCRIPTION
                url = POM_URL

                scm {
                    url = POM_SCM_URL
                    connection = POM_SCM_CONNECTION
                    developerConnection = POM_SCM_DEV_CONNECTION
                }

                licenses {
                    license {
                        name = POM_LICENSE_NAME
                        url = POM_LICENSE_URL
                        distribution = POM_LICENSE_DIST
                    }
                }

                developers {
                    developer {
                        id = POM_DEVELOPER_ID
                        name = POM_DEVELOPER_NAME
                        email = POM_DEVELOPER_EMAIL
                    }
                }

                organization {
                    name = POM_DEVELOPER_NAME
                    url = POM_DEVELOPER_CITE
                }
            }
        }
    }

    repositories {
        maven {
            url = getRepositoryUrl()
            credentials {
                username = getRepositoryUsername()
                password = getRepositoryPassword()
            }
        }
    }
}

signing {
    required { isReleaseBuild() && hasDeploymentTask(project) }
    sign project.publishing.publications
}

// At the moment, signing kotlin metadata fails with a Gradle error for snapshots.
// To work around, we'll need to suppress signing for them, which is different from
// 'signing.required = false'.
if (!isReleaseBuild()) {
    tasks.withType(Sign) {
        onlyIf { isReleaseBuild() && hasDeploymentTask(project) }
    }
}
